using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using MaaAahwanam.Service;
using MaaAahwanam.Models;
using MaaAahwanam.Utility;
using System.IO;

namespace MaaAahwanam.Web.Areas.Admin.Controllers
{
    public class CreateVendorController : Controller
    {
        //public CreateVendorController(IAccommodationService accommodationService)
        //{ }
        public ActionResult Images()
        {
            return View();
        }

        public ActionResult BeautyServices()
        {
            return View();
        }

        [HttpPost]
        public ActionResult BeautyServices([Bind(Prefix = "Item2")] VendorsBeautyService vendorsBeautyService, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorBeautyServicesService vendorBeautyServicesService = new VendorBeautyServicesService();
            vendorsBeautyService.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsBeautyService = vendorBeautyServicesService.AddBeautyService(vendorsBeautyService, vendorMaster);
            if (vendorsBeautyService.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("BeautyServices", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("BeautyServices", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult Catering()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Catering([Bind(Prefix = "Item2")] VendorsCatering vendorsCatering, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorCateringService vendorCateringService = new VendorCateringService();
            vendorsCatering.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsCatering = vendorCateringService.AddCatering(vendorsCatering, vendorMaster);
            if (vendorsCatering.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Catering", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Catering", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult Decorator()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Decorator([Bind(Prefix = "Item2")] VendorsDecorator vendorsDecorator, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorDecoratorService vendorDecoratorService = new VendorDecoratorService();
            vendorsDecorator.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsDecorator = vendorDecoratorService.AddDecorator(vendorsDecorator,vendorMaster);
            if (vendorsDecorator.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Decorator", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Decorator", "CreateVendor") + "'</script>");
            }
            return View();
        }

        public ActionResult Entertainment()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Entertainment([Bind(Prefix = "Item2")] VendorsEntertainment vendorsEntertainment, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorEntertainmentService vendorEntertainmentService = new VendorEntertainmentService();
            vendorsEntertainment.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsEntertainment = vendorEntertainmentService.AddEntertainment(vendorsEntertainment, vendorMaster);
            if (vendorsEntertainment.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Entertainment", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Entertainment", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult EventOrganisers()
        {
            return View();
        }
        [HttpPost]
        public ActionResult EventOrganisers([Bind(Prefix = "Item2")] VendorsEventOrganiser vendorsEventOrganisers, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorEventOrganiserService vendorEventOrganiserService = new VendorEventOrganiserService();
            vendorsEventOrganisers.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsEventOrganisers = vendorEventOrganiserService.AddEventOrganiser(vendorsEventOrganisers, vendorMaster);
            if (vendorsEventOrganisers.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("EventOrganisers", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("EventOrganisers", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult Gifts()
        {
            return View();
        }
        [HttpPost]
        public ActionResult Gifts([Bind(Prefix = "Item2")] VendorsGift vendorsGift, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorGiftService vendorGiftService = new VendorGiftService();
            vendorsGift.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsGift = vendorGiftService.AddGift(vendorsGift, vendorMaster);
            if (vendorsGift.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Gifts", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Gifts", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult InvitationCards()
        {
            return View();
        }
        [HttpPost]
        public ActionResult InvitationCards([Bind(Prefix = "Item2")] VendorsInvitationCard vendorsInvitationCard, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorInvitationCardsService vendorInvitationCardsService = new VendorInvitationCardsService();
            vendorsInvitationCard.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsInvitationCard = vendorInvitationCardsService.AddInvitationCard(vendorsInvitationCard, vendorMaster);
            if (vendorsInvitationCard.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("InvitationCards", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("InvitationCards", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult Photography()
        {
            return View();
        }
        [HttpPost]
        public ActionResult Photography([Bind(Prefix = "Item2")] VendorsPhotography vendorsPhotography, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorPhotographyService vendorPhotographyService = new VendorPhotographyService();
            vendorsPhotography.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsPhotography = vendorPhotographyService.AddPhotography(vendorsPhotography, vendorMaster);
            if (vendorsPhotography.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Photography", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Photography", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult TravelAccomodation()
        {
            return View();
        }
        [HttpPost]
        public ActionResult TravelAccomodation([Bind(Prefix = "Item2")] VendorsTravelandAccomodation vendorsTravelandAccomodation, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorTravelAndAccomadationService vendorTravelAndAccomadationService = new VendorTravelAndAccomadationService();
            vendorsTravelandAccomodation.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsTravelandAccomodation = vendorTravelAndAccomadationService.AddTravelAndAccomadation(vendorsTravelandAccomodation, vendorMaster);
            if (vendorsTravelandAccomodation.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("TravelAccomodation", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("TravelAccomodation", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult WeddingCollection()
        {
            return View();
        }
        [HttpPost]
        public ActionResult WeddingCollection([Bind(Prefix = "Item2")] VendorsWeddingCollection vendorsWeddingCollection, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorWeddingCollectionService vendorWeddingCollectionService = new VendorWeddingCollectionService();
            vendorsWeddingCollection.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsWeddingCollection = vendorWeddingCollectionService.AddWeddingCollection(vendorsWeddingCollection, vendorMaster);
            if (vendorsWeddingCollection.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("WeddingCollection", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("WeddingCollection", "CreateVendor") + "'</script>");
            }
            return View();
        }
        public ActionResult Venue()
        {
            return View();
        }
        [HttpPost]
        public ActionResult Venue([Bind(Prefix = "Item2")] VendorVenue vendorVenue, [Bind(Prefix = "Item1")] Vendormaster vendorMaster)
        {
            VendorVenueService vendorVenueService = new VendorVenueService();
            vendorVenue.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorVenue = vendorVenueService.AddVenue(vendorVenue, vendorMaster);
            if (vendorVenue.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Venue", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Venue", "CreateVendor") + "'</script>");
            }
            return View();
        }
        [HttpGet]
        public ActionResult Others()
        {
            return View();
        }
        [HttpPost]
        public ActionResult Others([Bind(Prefix = "Item2")] VendorsOther vendorsOther, [Bind(Prefix = "Item1")] Vendormaster vendorMaster, HttpPostedFileBase file, string Command)
        {
            string fileName = string.Empty;
            string ImagesURL = string.Empty;
            VendorOthersService vendorOthersService = new VendorOthersService();
            vendorsOther.UpdatedBy = ValidUserUtility.ValidUser();
            vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
            vendorsOther = vendorOthersService.AddOther(vendorsOther, vendorMaster);
            VendorImage vendorImage = new VendorImage();

            vendorImage.VendorMasterId = 200;
            //var posted = Request.Files["fileUpload"];
            //if (posted.FileName != "")
            //{
            const string imagepath = "/vendorimages";
            //if (Request.Files.Count <= 5)
            //{
            //    for (int i = 0; i < Request.Files.Count; i++)
            //    {
            //        var filename = imagepath + "Others_" + vendorsOther.Id + "_" + i;
            //        var filePath = imagepath + filename;
            //        posted.SaveAs(Server.MapPath(filePath));
            //        VendorImageService vendorImageService = new VendorImageService();
            //        vendorImage = vendorImageService.AddVendorImage(vendorImage, vendorMaster);
            //    }
            //}

            //}
            //vendorImage.ImageName=
            for (int i = 0; i < Request.Files.Count; i++)
            {
                var file1 = Request.Files[i];
                if (file1 != null && file1.ContentLength > 0)
                {
                    var filename = imagepath + "Others_" + vendorsOther.VendorMasterId + "_" + i;
                    string path = System.IO.Path.GetExtension(file.FileName);
                    fileName = System.IO.Path.Combine(System.Web.HttpContext.Current.Server.MapPath(imagepath));
                    //file1.SaveAs(fileName);
                    VendorImageService vendorImageService = new VendorImageService();
                    vendorImage = vendorImageService.AddVendorImage(vendorImage, vendorMaster);
                }
            }
            if (vendorsOther.Id != 0)
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Others", "CreateVendor") + "'</script>");
            }
            else
            {
                return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Others", "CreateVendor") + "'</script>");
            }
            return View();
        }












        //fine code for others module insertion


        //public ActionResult Others([Bind(Prefix = "Item2")] VendorsOther vendorsOther, [Bind(Prefix = "Item1")] Vendormaster vendorMaster, HttpPostedFileBase file1, string Command)
        //{
        //    string fileName = string.Empty;
        //    string ImagesURL = string.Empty;
        //    VendorOthersService vendorOthersService = new VendorOthersService();
        //    vendorsOther.UpdatedBy = ValidUserUtility.ValidUser();
        //    vendorMaster.UpdatedBy = ValidUserUtility.ValidUser();
        //    vendorsOther = vendorOthersService.AddOther(vendorsOther, vendorMaster);
        //    VendorImage vendorImage = new VendorImage();
        //    vendorImage.VendorId = vendorsOther.Id;
        //    vendorImage.VendorMasterId = vendorsOther.VendorMasterId;
        //    //var posted = Request.Files["fileUpload"];
        //    //if (posted.FileName != "")
        //    //{
        //        const string imagepath = "/Areas/Admin/vendorimages";
        //        //if (Request.Files.Count <= 5)
        //        //{
        //        //    for (int i = 0; i < Request.Files.Count; i++)
        //        //    {
        //        //        var filename = imagepath + "Others_" + vendorsOther.Id + "_" + i;
        //        //        var filePath = imagepath + filename;
        //        //        posted.SaveAs(Server.MapPath(filePath));
        //        //        VendorImageService vendorImageService = new VendorImageService();
        //        //        vendorImage = vendorImageService.AddVendorImage(vendorImage, vendorMaster);
        //        //    }
        //        //}

        //    //}
        //    //vendorImage.ImageName=
        //    for (int i = 0; i < Request.Files.Count; i++)
        //    {
        //        var file = Request.Files[i];
        //        if (file != null && file.ContentLength > 0)
        //        {
        //            var filename = imagepath + "Others_" + vendorsOther.VendorMasterId + "_" + i;
        //            string path =  System.IO.Path.GetExtension(file.FileName);
        //            fileName = System.IO.Path.Combine(System.Web.HttpContext.Current.Server.MapPath(imagepath));
        //            file.SaveAs(fileName);
        //            VendorImageService vendorImageService = new VendorImageService();
        //            vendorImage = vendorImageService.AddVendorImage(vendorImage, vendorMaster);
        //        }
        //    }
        //    if (vendorsOther.Id != 0)
        //    {
        //        return Content("<script language='javascript' type='text/javascript'>alert('Registered Successfully');location.href='" + @Url.Action("Others", "CreateVendor") + "'</script>");
        //    }
        //    else
        //    {
        //        return Content("<script language='javascript' type='text/javascript'>alert('Registration Failed');location.href='" + @Url.Action("Others", "CreateVendor") + "'</script>");
        //    }
        //    return View();
        //}
       
	}
}